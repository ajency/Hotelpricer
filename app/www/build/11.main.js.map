{"version":3,"sources":["../../src/pages/reset-login/reset-login.module.ts","../../src/pages/reset-login/reset-login.ts"],"names":[],"mappings":"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","file":"11.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ResetLoginPage } from './reset-login';\n\n@NgModule({\n  declarations: [\n    ResetLoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ResetLoginPage),\n  ],\n  exports: [\n    ResetLoginPage\n  ]\n})\nexport class ResetLoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-login/reset-login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthGuard } from '../../providers/auth-guard';\nimport { RepricerApi } from '../../providers/repricer-api';\nimport { AppService } from '../../providers/app-service';\n\n/**\n * Generated class for the ResetLoginPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage({\n  name: 'reset-password',\n  segment: 'reset-password/:token',\n  priority: 'off'\n})\n@Component({\n  selector: 'page-reset-login',\n  templateUrl: 'reset-login.html',\n})\nexport class ResetLoginPage {\n  private password: string = '';\n  private confirmPassword: string = '';\n  private minLength = 6;\n  private validationFailMessage: string = '';\n  private validFields: boolean = false;\n  private token: string = '';\n  private resetMailSent: boolean = false;\n  private resetingMail: boolean = false;\n\n  constructor(\n    private authguard: AuthGuard,\n    private navparams: NavParams,\n    private navCtrl: NavController,\n    private repricerapi: RepricerApi,\n    private appservice: AppService\n  ) {\n    this.token = this.navparams.get('token');\n    console.log(\"token\",this.token);\n  }\n\n  ionViewCanEnter(): Promise<boolean>{\n    console.log('ionviewcanenter ResetLoginPage')\n    // TBD update this logic\n    return new Promise((resolve,reject) => {\n      this.authguard.verifyToken('reset-password')\n      .then(() => {\n        console.warn('reset pass page not authorised')        \n        reject(true)\n      })\n      .catch(() => {\n        resolve(true) \n      })\n    });\n  }\n\n  private resetPassword(): void{\n    if(!this.password){\n      this.validationFailMessage = \"Password cannot be blank!\";\n      return;\n    }\n\n    if(!this.confirmPassword){\n      this.validationFailMessage = 'Confirm password cannot be blank!';\n      return;\n    }\n\n    if(this.password !== this.confirmPassword){\n      this.validationFailMessage = \"Password & confirm password do not match!\"\n      return;\n    }\n\n    let pload = {\n      \"token\": this.token,\n      \"new_password\": this.password,\n      \"confirm_password\": this.confirmPassword\n    }\n\n    this.resetingMail = true;\n    this.repricerapi.resetPassword(pload)\n    .then((res) => {\n      if(res.success == true){\n        this.resetingMail = false;\n        this.resetMailSent = true;\n        this.appservice.presentToast(res.status);\n        this.appservice.updateRootNav('login',true, {}, false);\n      }\n      else{\n        this.appservice.presentToast(res.status,'error');\n      }\n    })\n    .catch((err) => {\n      if(err.message){\n        this.appservice.presentToast(err.message,'error');\n      }\n      else{\n        this.appservice.presentToast('reset failed','error');\n      }\n    });\n  }\n\n  private comparePasswords(passdirty, confpassdirty): void{\n    console.log(\"pass \" + passdirty + \" confirm pass \" + confpassdirty);\n\n    this.validationFailMessage = '';\n    this.validFields = false;\n\n    if(this.password.length !== this.confirmPassword.length) return;\n    if(this.password === this.confirmPassword){\n      if(this.password.length >= this.minLength){\n        this.validFields = true;\n      }\n      else{\n        this.validationFailMessage = `Password should have at least ${this.minLength} characters!`;\n      }\n    }\n    else{\n      if(passdirty && confpassdirty){\n         this.validationFailMessage = \"Password & confirm password do not match!\"\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-login/reset-login.ts"],"sourceRoot":""}